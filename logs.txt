[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/test/jest
[info]: Trying to download flint-plugins/lint/eslint
[info]: Trying to download flint-plugins/lint/sqlfluff
[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[info]: [git clone]: 
[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[error]: [git clone]: Cloning into './downloaded-plugins'...

[error]: [git clone]: fatal: destination path './downloaded-plugins' already exists and is not an empty directory.

[error]: [git clone]: Cloning into './downloaded-plugins'...

[error]: [git clone]: Cloning into './downloaded-plugins'...

[error]: [git clone]: Cloning into './downloaded-plugins'...

[error]: [git clone]: Cloning into './downloaded-plugins'...

[error]: [git clone]: Cloning into './downloaded-plugins'...

[error]: [git clone]: Cloning into './downloaded-plugins'...

[info]: Destination directory ./downloaded-plugins already exists
[info]: Created temporary directory: /tmp/flint-plugins-temp
[error]: [git clone]: Cloning into '/tmp/flint-plugins-temp'...

[info]: Copied plugin from /tmp/flint-plugins-temp/flint-plugins/test/jest to ./downloaded-plugins/test/jest
[info]: Removed temporary directory: /tmp/flint-plugins-temp
[info]: Determined current directory: /home/skadewdl3/Projects/flint
[info]: Determined current directory: /home/skadewdl3/Projects/flint
[info]: Created temporary directory: /tmp/flint-plugins-temp
[error]: [git clone]: Cloning into '/tmp/flint-plugins-temp'...

[info]: Removed existing plugin: ./downloaded-plugins/test/jest
[info]: Copied plugin from /tmp/flint-plugins-temp/flint-plugins/test/jest to ./downloaded-plugins/test/jest
[info]: Removed temporary directory: /tmp/flint-plugins-temp
[info]: Created temporary directory: /tmp/flint-plugins-temp
[error]: [git clone]: Cloning into '/tmp/flint-plugins-temp'...
Updating files:  28% (2/7)Updating files:  42% (3/7)Updating files:  57% (4/7)Updating files:  71% (5/7)Updating files:  85% (6/7)Updating files: 100% (7/7)Updating files: 100% (7/7), done.

[info]: Removed existing plugin: ./downloaded-plugins/lint/eslint
[info]: Copied plugin from /tmp/flint-plugins-temp/flint-plugins/lint/eslint to ./downloaded-plugins/lint/eslint
[info]: Removed existing plugin: ./downloaded-plugins/lint/sqlfluff
[info]: Copied plugin from /tmp/flint-plugins-temp/flint-plugins/lint/sqlfluff to ./downloaded-plugins/lint/sqlfluff
[info]: Removed temporary directory: /tmp/flint-plugins-temp
[debug]: InstallArgs {
    plugins: [],
    lint: false,
    test: false,
    all: true,
    help: false,
    logs: false,
}
[info]: Validating sqlfluff config
[info]: Generating ESLint configuration
[info]: Validating sqlfluff config
[info]: Generating ESLint configuration
[info]: Validating sqlfluff config
[info]: Generating ESLint configuration
[success]: Generated eslint config successfully
[success]: Generated sqlfluff config successfully
[info]: Validating sqlfluff config
[error]: Error reading plugin code
[info]: Generating ESLint configuration
[success]: Generated sqlfluff config successfully
[success]: Generated eslint config successfully
[error]: Error reading plugin code
[info]: Validating sqlfluff config
[info]: Generating ESLint configuration
[success]: Generated sqlfluff config successfully
[success]: Generated eslint config successfully
[error]: Error reading plugin code
[info]: Validating sqlfluff config
[info]: Generating ESLint configuration
[success]: Generated eslint config successfully
[success]: Generated github-actions config successfully
[success]: Generated sqlfluff config successfully
[debug]: Filter {
    iter: IntoIter(
        [],
    ),
}
[debug]: Filter {
    iter: IntoIter(
        [
            Plugin {
                details: PluginDetails {
                    id: "eslint",
                    extensions: [
                        "js",
                        "ts",
                        "mjs",
                        "cjs",
                    ],
                    version: "0.0.1",
                    author: "Onkar Kapuskari",
                },
                path: "./plugins/lint/eslint",
                kind: Lint,
            },
            Plugin {
                details: PluginDetails {
                    id: "jest",
                    extensions: [
                        "js",
                        "ts",
                        "mjs",
                        "cjs",
                    ],
                    version: "0.0.1",
                    author: "Soham Karandikar",
                },
                path: "./plugins/test/jest",
                kind: Test,
            },
            Plugin {
                details: PluginDetails {
                    id: "sqlfluff",
                    extensions: [
                        "sql",
                    ],
                    version: "0.0.1",
                    author: "Onkar Kapuskari",
                },
                path: "./plugins/lint/sqlfluff",
                kind: Lint,
            },
        ],
    ),
}
[error]: Failed to execute command 'eslint': No such file or directory (os error 2)
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "Error: Could not find a config file based on provided values:\npath: \"/home/skadewdl3/Projects/flint\"\ncwd: \"/home/skadewdl3/Projects/flint\"\nConfig paths must be specified by either a direct path to a config\nfile, or a path to a directory. If directory is given, Jest will try to\ntraverse directory tree up, until it finds one of those files in exact order: \"jest.config.js\" or \"jest.config.ts\" or \"jest.config.mjs\" or \"jest.config.cjs\" or \"jest.config.json\".\n    at resolveConfigPathByTraversing (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/resolveConfigPath.js:161:11)\n    at resolveConfigPathByTraversing (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/resolveConfigPath.js:165:10)\n    at resolveConfigPathByTraversing (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/resolveConfigPath.js:165:10)\n    at resolveConfigPathByTraversing (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/resolveConfigPath.js:165:10)\n    at resolveConfigPathByTraversing (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/resolveConfigPath.js:165:10)\n    at resolveConfigPath (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/resolveConfigPath.js:129:10)\n    at readInitialOptions (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/index.js:397:53)\n    at readConfig (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/index.js:147:54)\n    at readConfigs (/home/skadewdl3/.bun/install/global/node_modules/jest-config/build/index.js:424:32)\n    at runCLI (/home/skadewdl3/.bun/install/global/node_modules/@jest/core/build/cli/index.js:152:29)\n",
  "success": false
}
[debug]: {
  "status": 0,
  "stdout": "Run a command from a local or remote npm package\n\nUsage:\nnpm exec -- <pkg>[@<version>] [args...]\nnpm exec --package=<pkg>[@<version>] -- <cmd> [args...]\nnpm exec -c '<cmd> [args...]'\nnpm exec --package=foo -c '<cmd> [args...]'\n\nOptions:\n[--package <package-spec> [--package <package-spec> ...]] [-c|--call <call>]\n[-w|--workspace <workspace-name> [-w|--workspace <workspace-name> ...]]\n[-ws|--workspaces] [--include-workspace-root]\n\nalias: x\n\nRun \"npm help exec\" for more info\n",
  "stderr": "",
  "success": true
}
[warn]: Skipping installation of plugins due to --no-install flag
[success]: Generated github-actions config successfully
[success]: Generated github-actions config successfully
[success]: Generated github-actions config successfully
[info]: "/home/skadewdl3/Projects/flint/flint-tests/js/.flint"
[success]: Generated github-actions config successfully
[error]: Plugin jest is missing required file: generate.lua
[error]: Plugin jest has invalid file structure.
Error message: Application error: Plugin jest is missing required file: generate.lua
[success]: Generated github-actions config successfully
[error]: Plugin jest is missing required file: validate.lua
[error]: Plugin jest has invalid file structure.
Error message: Application error: Plugin jest is missing required file: validate.lua
[success]: Generated github-actions config successfully
[success]: Generated github-actions config successfully
[success]: Generated github-actions config successfully
[success]: Generated jest config successfully
[success]: Generated github-actions config successfully
[info]: Running tests
[debug]: []
[debug]: []
[debug]: []
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--json",
]
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    ".flint/jest.config.js",
    "--json",
]
[success]: Generated jest config successfully
[success]: Generated github-actions config successfully
[success]: Generated jest config successfully
[success]: Generated github-actions config successfully
[success]: Generated jest config successfully
[success]: Generated github-actions config successfully
[success]: Generated jest config successfully
[success]: Generated github-actions config successfully
[success]: Generated jest config successfully
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: /home/skadewdl3/Projects/flint/flint-tests/js
[success]: Generated jest config successfully
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: /home/skadewdl3/Projects/flint/flint-tests/js
[success]: Generated github-actions config successfully
[success]: Generated jest config successfully
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n",
  "success": false
}
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n",
  "success": false
}
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n",
  "success": false
}
[debug]: null
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n",
  "success": false
}
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n",
  "success": false
}
[debug]: "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n"
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n",
  "success": false
}
[debug]: "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n"
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n",
  "success": false
}
[debug]: "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.ts - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n"
[info]: Generating Jest configuration
[info]: /home/skadewdl3/Projects/flint/flint-tests/js
[success]: Generated github-actions config successfully
[success]: Generated jest config successfully
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 1,
  "stdout": "",
  "stderr": "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.js - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n",
  "success": false
}
[debug]: "No tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn /home/skadewdl3/Projects/flint/flint-tests/js/.flint\n  1 file checked.\n  testMatch: src/*.test.js - 0 matches\n  testPathIgnorePatterns: node_modules/, dist/ - 1 match\n  testRegex:  - 0 matches\nPattern:  - 0 matches\n"
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--rootDir",
    "/home/skadewdl3/Projects/flint/flint-tests/js",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 0,
  "stdout": "{\"numFailedTestSuites\":0,\"numFailedTests\":0,\"numPassedTestSuites\":1,\"numPassedTests\":5,\"numPendingTestSuites\":0,\"numPendingTests\":0,\"numRuntimeErrorTestSuites\":0,\"numTodoTests\":0,\"numTotalTestSuites\":1,\"numTotalTests\":5,\"openHandles\":[],\"snapshot\":{\"added\":0,\"didUpdate\":false,\"failure\":false,\"filesAdded\":0,\"filesRemoved\":0,\"filesRemovedList\":[],\"filesUnmatched\":0,\"filesUpdated\":0,\"matched\":0,\"total\":0,\"unchecked\":0,\"uncheckedKeysByFile\":[],\"unmatched\":0,\"updated\":0},\"startTime\":1741685281576,\"success\":true,\"testResults\":[{\"assertionResults\":[{\"ancestorTitles\":[\"Calculator\"],\"duration\":2,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator adds two numbers correctly\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":3,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"adds two numbers correctly\"},{\"ancestorTitles\":[\"Calculator\"],\"duration\":1,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator subtracts two numbers correctly\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":3,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"subtracts two numbers correctly\"},{\"ancestorTitles\":[\"Calculator\"],\"duration\":0,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator multiplies two numbers correctly\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":3,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"multiplies two numbers correctly\"},{\"ancestorTitles\":[\"Calculator\"],\"duration\":0,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator divides two numbers correctly\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":3,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"divides two numbers correctly\"},{\"ancestorTitles\":[\"Calculator\"],\"duration\":3,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator throws error when dividing by zero\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":1,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"throws error when dividing by zero\"}],\"endTime\":1741685281867,\"message\":\"\",\"name\":\"/home/skadewdl3/Projects/flint/flint-tests/js/src/calculator.test.js\",\"startTime\":1741685281615,\"status\":\"passed\",\"summary\":\"\"}],\"wasInterrupted\":false,\"coverageMap\":{\"/home/skadewdl3/Projects/flint/flint-tests/js/src/calculator.js\":{\"path\":\"/home/skadewdl3/Projects/flint/flint-tests/js/src/calculator.js\",\"statementMap\":{\"0\":{\"start\":{\"line\":2,\"column\":2},\"end\":{\"line\":2,\"column\":15}},\"1\":{\"start\":{\"line\":6,\"column\":2},\"end\":{\"line\":6,\"column\":15}},\"2\":{\"start\":{\"line\":10,\"column\":2},\"end\":{\"line\":10,\"column\":15}},\"3\":{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":16,\"column\":3}},\"4\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":40}},\"5\":{\"start\":{\"line\":17,\"column\":2},\"end\":{\"line\":17,\"column\":15}},\"6\":{\"start\":{\"line\":20,\"column\":0},\"end\":{\"line\":25,\"column\":2}}},\"fnMap\":{\"0\":{\"name\":\"add\",\"decl\":{\"start\":{\"line\":1,\"column\":9},\"end\":{\"line\":1,\"column\":12}},\"loc\":{\"start\":{\"line\":1,\"column\":19},\"end\":{\"line\":3,\"column\":1}},\"line\":1},\"1\":{\"name\":\"subtract\",\"decl\":{\"start\":{\"line\":5,\"column\":9},\"end\":{\"line\":5,\"column\":17}},\"loc\":{\"start\":{\"line\":5,\"column\":24},\"end\":{\"line\":7,\"column\":1}},\"line\":5},\"2\":{\"name\":\"multiply\",\"decl\":{\"start\":{\"line\":9,\"column\":9},\"end\":{\"line\":9,\"column\":17}},\"loc\":{\"start\":{\"line\":9,\"column\":24},\"end\":{\"line\":11,\"column\":1}},\"line\":9},\"3\":{\"name\":\"divide\",\"decl\":{\"start\":{\"line\":13,\"column\":9},\"end\":{\"line\":13,\"column\":15}},\"loc\":{\"start\":{\"line\":13,\"column\":22},\"end\":{\"line\":18,\"column\":1}},\"line\":13}},\"branchMap\":{\"0\":{\"loc\":{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":16,\"column\":3}},\"type\":\"if\",\"locations\":[{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":16,\"column\":3}},{\"start\":{},\"end\":{}}],\"line\":14}},\"s\":{\"0\":3,\"1\":3,\"2\":3,\"3\":4,\"4\":1,\"5\":3,\"6\":1},\"f\":{\"0\":3,\"1\":3,\"2\":3,\"3\":4},\"b\":{\"0\":[1,3]},\"_coverageSchema\":\"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\"hash\":\"d9883998eb96779015c5bd57ddab6531579e7274\"}}}\n",
  "stderr": "PASS flint-tests/js/src/calculator.test.js\n  Calculator\n    ✓ adds two numbers correctly (2 ms)\n    ✓ subtracts two numbers correctly (1 ms)\n    ✓ multiplies two numbers correctly\n    ✓ divides two numbers correctly\n    ✓ throws error when dividing by zero (3 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       5 passed, 5 total\nSnapshots:   0 total\nTime:        0.309 s\nRan all test suites.\n",
  "success": true
}
[debug]: null
[debug]: [
    Plugin {
        details: PluginDetails {
            id: "jest",
            extensions: [
                "js",
                "ts",
                "mjs",
                "cjs",
            ],
            version: "0.0.1",
            author: "Aditya Sakhare",
        },
        path: "./flint-plugins/test/jest",
        kind: Test,
    },
]
[info]: Running command: [
    "jest",
    "--rootDir",
    "/home/skadewdl3/Projects/flint/flint-tests/js",
    "--config",
    "/home/skadewdl3/Projects/flint/flint-tests/js/.flint/jest.config.js",
    "--json",
]
[debug]: {
  "status": 0,
  "stdout": "{\"numFailedTestSuites\":0,\"numFailedTests\":0,\"numPassedTestSuites\":1,\"numPassedTests\":5,\"numPendingTestSuites\":0,\"numPendingTests\":0,\"numRuntimeErrorTestSuites\":0,\"numTodoTests\":0,\"numTotalTestSuites\":1,\"numTotalTests\":5,\"openHandles\":[],\"snapshot\":{\"added\":0,\"didUpdate\":false,\"failure\":false,\"filesAdded\":0,\"filesRemoved\":0,\"filesRemovedList\":[],\"filesUnmatched\":0,\"filesUpdated\":0,\"matched\":0,\"total\":0,\"unchecked\":0,\"uncheckedKeysByFile\":[],\"unmatched\":0,\"updated\":0},\"startTime\":1741697120301,\"success\":true,\"testResults\":[{\"assertionResults\":[{\"ancestorTitles\":[\"Calculator\"],\"duration\":1,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator adds two numbers correctly\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":3,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"adds two numbers correctly\"},{\"ancestorTitles\":[\"Calculator\"],\"duration\":0,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator subtracts two numbers correctly\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":3,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"subtracts two numbers correctly\"},{\"ancestorTitles\":[\"Calculator\"],\"duration\":1,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator multiplies two numbers correctly\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":3,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"multiplies two numbers correctly\"},{\"ancestorTitles\":[\"Calculator\"],\"duration\":0,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator divides two numbers correctly\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":3,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"divides two numbers correctly\"},{\"ancestorTitles\":[\"Calculator\"],\"duration\":4,\"failureDetails\":[],\"failureMessages\":[],\"fullName\":\"Calculator throws error when dividing by zero\",\"invocations\":1,\"location\":null,\"numPassingAsserts\":1,\"retryReasons\":[],\"status\":\"passed\",\"title\":\"throws error when dividing by zero\"}],\"endTime\":1741697120591,\"message\":\"\",\"name\":\"/home/skadewdl3/Projects/flint/flint-tests/js/src/calculator.test.js\",\"startTime\":1741697120339,\"status\":\"passed\",\"summary\":\"\"}],\"wasInterrupted\":false,\"coverageMap\":{\"/home/skadewdl3/Projects/flint/flint-tests/js/src/calculator.js\":{\"path\":\"/home/skadewdl3/Projects/flint/flint-tests/js/src/calculator.js\",\"statementMap\":{\"0\":{\"start\":{\"line\":2,\"column\":2},\"end\":{\"line\":2,\"column\":15}},\"1\":{\"start\":{\"line\":6,\"column\":2},\"end\":{\"line\":6,\"column\":15}},\"2\":{\"start\":{\"line\":10,\"column\":2},\"end\":{\"line\":10,\"column\":15}},\"3\":{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":16,\"column\":3}},\"4\":{\"start\":{\"line\":15,\"column\":4},\"end\":{\"line\":15,\"column\":40}},\"5\":{\"start\":{\"line\":17,\"column\":2},\"end\":{\"line\":17,\"column\":15}},\"6\":{\"start\":{\"line\":20,\"column\":0},\"end\":{\"line\":25,\"column\":2}}},\"fnMap\":{\"0\":{\"name\":\"add\",\"decl\":{\"start\":{\"line\":1,\"column\":9},\"end\":{\"line\":1,\"column\":12}},\"loc\":{\"start\":{\"line\":1,\"column\":19},\"end\":{\"line\":3,\"column\":1}},\"line\":1},\"1\":{\"name\":\"subtract\",\"decl\":{\"start\":{\"line\":5,\"column\":9},\"end\":{\"line\":5,\"column\":17}},\"loc\":{\"start\":{\"line\":5,\"column\":24},\"end\":{\"line\":7,\"column\":1}},\"line\":5},\"2\":{\"name\":\"multiply\",\"decl\":{\"start\":{\"line\":9,\"column\":9},\"end\":{\"line\":9,\"column\":17}},\"loc\":{\"start\":{\"line\":9,\"column\":24},\"end\":{\"line\":11,\"column\":1}},\"line\":9},\"3\":{\"name\":\"divide\",\"decl\":{\"start\":{\"line\":13,\"column\":9},\"end\":{\"line\":13,\"column\":15}},\"loc\":{\"start\":{\"line\":13,\"column\":22},\"end\":{\"line\":18,\"column\":1}},\"line\":13}},\"branchMap\":{\"0\":{\"loc\":{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":16,\"column\":3}},\"type\":\"if\",\"locations\":[{\"start\":{\"line\":14,\"column\":2},\"end\":{\"line\":16,\"column\":3}},{\"start\":{},\"end\":{}}],\"line\":14}},\"s\":{\"0\":3,\"1\":3,\"2\":3,\"3\":4,\"4\":1,\"5\":3,\"6\":1},\"f\":{\"0\":3,\"1\":3,\"2\":3,\"3\":4},\"b\":{\"0\":[1,3]},\"_coverageSchema\":\"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\"hash\":\"d9883998eb96779015c5bd57ddab6531579e7274\"}}}\n",
  "stderr": "PASS flint-tests/js/src/calculator.test.js\n  Calculator\n    ✓ adds two numbers correctly (1 ms)\n    ✓ subtracts two numbers correctly\n    ✓ multiplies two numbers correctly (1 ms)\n    ✓ divides two numbers correctly\n    ✓ throws error when dividing by zero (4 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       5 passed, 5 total\nSnapshots:   0 total\nTime:        0.306 s\nRan all test suites.\n",
  "success": true
}
[debug]: null
[info]: Generating Jest configuration
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "^29.0.0"
    }
  ]
}
[info]: Generating jest config
[info]: result: Ok({"jest.config.js": "import jest from 'jest';\n\nexport default {\n  \"testEnvironment\": \"node\",\n  \"testMatch\": [\n    \"src/*.test.js\"\n  ],\n  \"testPathIgnorePatterns\": [\n    \"node_modules/\",\n    \"dist/\"\n  ],\n  \"verbose\": true,\n  \"collectCoverage\": true\n};"})
[success]: Generated jest config successfully
[info]: Generating github-actions config
[info]: result: Ok({"workflows.yml": "on:\n  pull_request:\n    branches:\n    - main\n  push:\n    branches:\n    - main\nname: Flint CI\njobs:\n  flint_checks:\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v3\n    - name: Install Git\n      run: \"                        sudo apt-get update\\n                        sudo apt-get install -y git\\n                        \"\n    - uses: actions/setup-node@v3\n      name: Install Node.js\n      with:\n        node-version: 18.x\n    - name: Install Jest and ESLint\n      run: \"                                                npm install -g jest eslint --no-fund --no-audit --silent\\n                                                echo \\\"Node.js, Jest, and ESLint installed successfully\\\"\\n                                            \"\n    - uses: robinraju/release-downloader@v1\n      name: Install Flint\n      with:\n        latest: true\n        repository: skadewdl3/flint\n        fileName: flint\n        out-file-path: .\n        prerelease: true\n    - name: Run Tests\n      run: \"                            chmod +x ./flint\\n                            ./flint install\\n                            ./flint test --test\\n                        \"\n    - uses: actions/upload-artifact@v4\n      name: Upload Test Results\n      with:\n        name: Test Results\n        path: .flint/reports/reports/report.json\n    - uses: actions/upload-artifact@v4\n      name: Upload Logs\n      with:\n        name: Logs\n        path: logs.txt\n    name: Flint Checks\n    runs-on: ubuntu-latest\n"})
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "^29.0.0"
    }
  ]
}
[info]: Generating jest config
[success]: Generated jest config successfully
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[info]: Generating ESLint configuration
[info]: Generating eslint config
[success]: Generated eslint config successfully
[debug]: {
  "npm": [
    {
      "name": "eslint",
      "version": "latest"
    },
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:92:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:92:31"]:1: in ?
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:92:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:92:31"]:1: in ?
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:92:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:92:31"]:1: in ?
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:92:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:92:31"]:1: in ?
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:92:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:92:31"]:1: in ?
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:92:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:92:31"]:1: in ?
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:92:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:92:31"]:1: in ?
[debug]: {
  cpath = "?.so",
  loaded = {
    _G = {
      _G = table: 0x7ff9380127b8,
      _VERSION = "Luau 0.660",
      assert = function: 0x7ff938012698,
      bit32 = {
        arshift = function: 0x7ff9380102c8,
        band = function: 0x7ff938010298,
        bnot = function: 0x7ff938010268,
        bor = function: 0x7ff938010238,
        btest = function: 0x7ff9380101d8,
        bxor = function: 0x7ff938010208,
        byteswap = function: 0x7ff938010028,
        countlz = function: 0x7ff938010088,
        countrz = function: 0x7ff938010058,
        extract = function: 0x7ff9380101a8,
        lrotate = function: 0x7ff938010178,
        lshift = function: 0x7ff938010148,
        replace = function: 0x7ff938010118,
        rrotate = function: 0x7ff9380100e8,
        rshift = function: 0x7ff9380100b8,
      },
      buffer = {
        copy = function: 0x7ff93800fb18,
        create = function: 0x7ff93800ff38,
        fill = function: 0x7ff93800fae8,
        fromstring = function: 0x7ff93800ff08,
        len = function: 0x7ff93800fb48,
        readf32 = function: 0x7ff93800fd88,
        readf64 = function: 0x7ff93800fd58,
        readi16 = function: 0x7ff93800fe48,
        readi32 = function: 0x7ff93800fde8,
        readi8 = function: 0x7ff93800fea8,
        readstring = function: 0x7ff93800fba8,
        readu16 = function: 0x7ff93800fe18,
        readu32 = function: 0x7ff93800fdb8,
        readu8 = function: 0x7ff93800fe78,
        tostring = function: 0x7ff93800fed8,
        writef32 = function: 0x7ff93800fc08,
        writef64 = function: 0x7ff93800fbd8,
        writei16 = function: 0x7ff93800fcc8,
        writei32 = function: 0x7ff93800fc68,
        writei8 = function: 0x7ff93800fd28,
        writestring = function: 0x7ff93800fb78,
        writeu16 = function: 0x7ff93800fc98,
        writeu32 = function: 0x7ff93800fc38,
        writeu8 = function: 0x7ff93800fcf8,
      },
      collectgarbage = function: 0x7ff93800edc8,
      coroutine = {
        close = function: 0x7ff938010f58,
        create = function: 0x7ff938011078,
        isyieldable = function: 0x7ff938010f88,
        resume = function: 0x7ff938010f28,
        running = function: 0x7ff938011048,
        status = function: 0x7ff938011018,
        wrap = function: 0x7ff938010fe8,
        yield = function: 0x7ff938010fb8,
      },
      debug = {
        info = function: 0x7ff93800ef78,
        traceback = function: 0x7ff93800ef48,
      },
      error = function: 0x7ff938012668,
      gcinfo = function: 0x7ff938012638,
      getfenv = function: 0x7ff938012608,
      getmetatable = function: 0x7ff9380125d8,
      ipairs = function: 0x7ff938032728,
      json = {
        parse = function: 0x7ff938032568,
        stringify = function: 0x7ff938032628,
      },
      log = {},
      math = {
        abs = function: 0x7ff93800f668,
        acos = function: 0x7ff93800f638,
        asin = function: 0x7ff93800f608,
        atan = function: 0x7ff93800f5a8,
        atan2 = function: 0x7ff93800f5d8,
        ceil = function: 0x7ff93800f578,
        clamp = function: 0x7ff93800f0f8,
        cos = function: 0x7ff93800f518,
        cosh = function: 0x7ff93800f548,
        deg = function: 0x7ff93800f4e8,
        exp = function: 0x7ff93800f4b8,
        floor = function: 0x7ff93800f488,
        fmod = function: 0x7ff93800f458,
        frexp = function: 0x7ff93800f428,
        huge = inf,
        ldexp = function: 0x7ff93800f3f8,
        log = function: 0x7ff93800f398,
        log10 = function: 0x7ff93800f3c8,
        map = function: 0x7ff93800f068,
        max = function: 0x7ff93800f368,
        min = function: 0x7ff93800f338,
        modf = function: 0x7ff93800f308,
        noise = function: 0x7ff93800f128,
        pi = 3.141592653589793,
        pow = function: 0x7ff93800f2d8,
        rad = function: 0x7ff93800f2a8,
        random = function: 0x7ff93800f278,
        randomseed = function: 0x7ff93800f248,
        round = function: 0x7ff93800f098,
        sign = function: 0x7ff93800f0c8,
        sin = function: 0x7ff93800f1e8,
        sinh = function: 0x7ff93800f218,
        sqrt = function: 0x7ff93800f1b8,
        tan = function: 0x7ff93800f158,
        tanh = function: 0x7ff93800f188,
      },
      newproxy = function: 0x7ff938012578,
      next = function: 0x7ff9380125a8,
      os = {
        clock = function: 0x7ff938010a18,
        date = function: 0x7ff9380109e8,
        difftime = function: 0x7ff9380109b8,
        time = function: 0x7ff938010988,
      },
      package = table: 0x7ff93800ef18,
      pairs = function: 0x7ff9380326e8,
      path = {
        cwd = function: 0x7ff9380324a8,
        join = function: 0x7ff938032428,
        resolve = function: 0x7ff938032468,
      },
      pcall = function: 0x7ff9380122a8,
      print = function: 0x7ff938012548,
      rawequal = function: 0x7ff938012518,
      rawget = function: 0x7ff9380124e8,
      rawlen = function: 0x7ff938012488,
      rawset = function: 0x7ff9380124b8,
      require = function: 0x7ff93800edf8,
      select = function: 0x7ff938012458,
      setfenv = function: 0x7ff938012428,
      setmetatable = function: 0x7ff9380123f8,
      string = {
        byte = function: 0x7ff938010898,
        char = function: 0x7ff938010868,
        find = function: 0x7ff938010838,
        format = function: 0x7ff938010808,
        gmatch = function: 0x7ff9380107d8,
        gsub = function: 0x7ff9380107a8,
        len = function: 0x7ff938010778,
        lower = function: 0x7ff938010748,
        match = function: 0x7ff938010718,
        pack = function: 0x7ff9380105f8,
        packsize = function: 0x7ff9380105c8,
        rep = function: 0x7ff9380106e8,
        reverse = function: 0x7ff9380106b8,
        split = function: 0x7ff938010628,
        sub = function: 0x7ff938010688,
        unpack = function: 0x7ff938010598,
        upper = function: 0x7ff938010658,
      },
      table = {
        clear = function: 0x7ff938010bc8,
        clone = function: 0x7ff938010b38,
        concat = function: 0x7ff938010e38,
        create = function: 0x7ff938010c28,
        find = function: 0x7ff938010bf8,
        foreach = function: 0x7ff938010e08,
        foreachi = function: 0x7ff938010dd8,
        freeze = function: 0x7ff938010b98,
        getn = function: 0x7ff938010da8,
        insert = function: 0x7ff938010d48,
        isfrozen = function: 0x7ff938010b68,
        maxn = function: 0x7ff938010d78,
        move = function: 0x7ff938010c58,
        pack = function: 0x7ff938010cb8,
        remove = function: 0x7ff938010d18,
        sort = function: 0x7ff938010ce8,
        unpack = function: 0x7ff938010c88,
      },
      toml = {
        parse = function: 0x7ff938032528,
        stringify = function: 0x7ff9380325e8,
      },
      tonumber = function: 0x7ff9380123c8,
      tostring = function: 0x7ff938012398,
      type = function: 0x7ff938012368,
      typeof = function: 0x7ff938012338,
      unpack = function: 0x7ff938010b08,
      utf8 = {
        char = function: 0x7ff938010418,
        charpattern = b"[\0-\x7f\xc2-\xf4][\x80-\xbf]*",
        codepoint = function: 0x7ff938010448,
        codes = function: 0x7ff9380103b8,
        len = function: 0x7ff9380103e8,
        offset = function: 0x7ff938010478,
      },
      vector = {
        abs = function: 0x7ff93800f878,
        angle = function: 0x7ff93800f908,
        ceil = function: 0x7ff93800f8a8,
        clamp = function: 0x7ff93800f818,
        create = function: 0x7ff93800f9f8,
        cross = function: 0x7ff93800f968,
        dot = function: 0x7ff93800f938,
        floor = function: 0x7ff93800f8d8,
        magnitude = function: 0x7ff93800f9c8,
        max = function: 0x7ff93800f7e8,
        min = function: 0x7ff93800f7b8,
        normalize = function: 0x7ff93800f998,
        one = vector(1, 1, 1),
        sign = function: 0x7ff93800f848,
        zero = vector(0, 0, 0),
      },
      xpcall = function: 0x7ff938012278,
      yaml = {
        parse = function: 0x7ff9380324e8,
        stringify = function: 0x7ff9380325a8,
      },
    },
    bit32 = table: 0x7ff9380102f8,
    buffer = table: 0x7ff93800ff68,
    coroutine = table: 0x7ff9380110a8,
    debug = table: 0x7ff93800efa8,
    math = table: 0x7ff93800f698,
    os = table: 0x7ff938010a48,
    package = table: 0x7ff93800ef18,
    string = table: 0x7ff9380108c8,
    table = table: 0x7ff938010e68,
    utf8 = table: 0x7ff9380104a8,
    vector = table: 0x7ff93800fa28,
  },
  loaders = {
    function: 0x7ff9380326a8,
    function: 0x7ff938032668,
  },
  path = "?.luau;?.lua",
}[debug]: {
  cpath = "?.so",
  loaded = {
    _G = {
      _G = table: 0x7ff9300126d8,
      _VERSION = "Luau 0.660",
      assert = function: 0x7ff9300125b8,
      bit32 = {
        arshift = function: 0x7ff9300101e8,
        band = function: 0x7ff9300101b8,
        bnot = function: 0x7ff930010188,
        bor = function: 0x7ff930010158,
        btest = function: 0x7ff9300100f8,
        bxor = function: 0x7ff930010128,
        byteswap = function: 0x7ff93000ff48,
        countlz = function: 0x7ff93000ffa8,
        countrz = function: 0x7ff93000ff78,
        extract = function: 0x7ff9300100c8,
        lrotate = function: 0x7ff930010098,
        lshift = function: 0x7ff930010068,
        replace = function: 0x7ff930010038,
        rrotate = function: 0x7ff930010008,
        rshift = function: 0x7ff93000ffd8,
      },
      buffer = {
        copy = function: 0x7ff93000fa38,
        create = function: 0x7ff93000fe58,
        fill = function: 0x7ff93000fa08,
        fromstring = function: 0x7ff93000fe28,
        len = function: 0x7ff93000fa68,
        readf32 = function: 0x7ff93000fca8,
        readf64 = function: 0x7ff93000fc78,
        readi16 = function: 0x7ff93000fd68,
        readi32 = function: 0x7ff93000fd08,
        readi8 = function: 0x7ff93000fdc8,
        readstring = function: 0x7ff93000fac8,
        readu16 = function: 0x7ff93000fd38,
        readu32 = function: 0x7ff93000fcd8,
        readu8 = function: 0x7ff93000fd98,
        tostring = function: 0x7ff93000fdf8,
        writef32 = function: 0x7ff93000fb28,
        writef64 = function: 0x7ff93000faf8,
        writei16 = function: 0x7ff93000fbe8,
        writei32 = function: 0x7ff93000fb88,
        writei8 = function: 0x7ff93000fc48,
        writestring = function: 0x7ff93000fa98,
        writeu16 = function: 0x7ff93000fbb8,
        writeu32 = function: 0x7ff93000fb58,
        writeu8 = function: 0x7ff93000fc18,
      },
      collectgarbage = function: 0x7ff93000ece8,
      coroutine = {
        close = function: 0x7ff930010e78,
        create = function: 0x7ff930010f98,
        isyieldable = function: 0x7ff930010ea8,
        resume = function: 0x7ff930010e48,
        running = function: 0x7ff930010f68,
        status = function: 0x7ff930010f38,
        wrap = function: 0x7ff930010f08,
        yield = function: 0x7ff930010ed8,
      },
      debug = {
        info = function: 0x7ff93000ee98,
        traceback = function: 0x7ff93000ee68,
      },
      error = function: 0x7ff930012588,
      gcinfo = function: 0x7ff930012558,
      getfenv = function: 0x7ff930012528,
      getmetatable = function: 0x7ff9300124f8,
      ipairs = function: 0x7ff930032648,
      json = {
        parse = function: 0x7ff930032488,
        stringify = function: 0x7ff930032548,
      },
      log = {},
      math = {
        abs = function: 0x7ff93000f588,
        acos = function: 0x7ff93000f558,
        asin = function: 0x7ff93000f528,
        atan = function: 0x7ff93000f4c8,
        atan2 = function: 0x7ff93000f4f8,
        ceil = function: 0x7ff93000f498,
        clamp = function: 0x7ff93000f018,
        cos = function: 0x7ff93000f438,
        cosh = function: 0x7ff93000f468,
        deg = function: 0x7ff93000f408,
        exp = function: 0x7ff93000f3d8,
        floor = function: 0x7ff93000f3a8,
        fmod = function: 0x7ff93000f378,
        frexp = function: 0x7ff93000f348,
        huge = inf,
        ldexp = function: 0x7ff93000f318,
        log = function: 0x7ff93000f2b8,
        log10 = function: 0x7ff93000f2e8,
        map = function: 0x7ff93000ef88,
        max = function: 0x7ff93000f288,
        min = function: 0x7ff93000f258,
        modf = function: 0x7ff93000f228,
        noise = function: 0x7ff93000f048,
        pi = 3.141592653589793,
        pow = function: 0x7ff93000f1f8,
        rad = function: 0x7ff93000f1c8,
        random = function: 0x7ff93000f198,
        randomseed = function: 0x7ff93000f168,
        round = function: 0x7ff93000efb8,
        sign = function: 0x7ff93000efe8,
        sin = function: 0x7ff93000f108,
        sinh = function: 0x7ff93000f138,
        sqrt = function: 0x7ff93000f0d8,
        tan = function: 0x7ff93000f078,
        tanh = function: 0x7ff93000f0a8,
      },
      newproxy = function: 0x7ff930012498,
      next = function: 0x7ff9300124c8,
      os = {
        clock = function: 0x7ff930010938,
        date = function: 0x7ff930010908,
        difftime = function: 0x7ff9300108d8,
        time = function: 0x7ff9300108a8,
      },
      package = table: 0x7ff93000ee38,
      pairs = function: 0x7ff930032608,
      path = {
        cwd = function: 0x7ff9300323c8,
        join = function: 0x7ff930032348,
        resolve = function: 0x7ff930032388,
      },
      pcall = function: 0x7ff9300121c8,
      print = function: 0x7ff930012468,
      rawequal = function: 0x7ff930012438,
      rawget = function: 0x7ff930012408,
      rawlen = function: 0x7ff9300123a8,
      rawset = function: 0x7ff9300123d8,
      require = function: 0x7ff93000ed18,
      select = function: 0x7ff930012378,
      setfenv = function: 0x7ff930012348,
      setmetatable = function: 0x7ff930012318,
      string = {
        byte = function: 0x7ff9300107b8,
        char = function: 0x7ff930010788,
        find = function: 0x7ff930010758,
        format = function: 0x7ff930010728,
        gmatch = function: 0x7ff9300106f8,
        gsub = function: 0x7ff9300106c8,
        len = function: 0x7ff930010698,
        lower = function: 0x7ff930010668,
        match = function: 0x7ff930010638,
        pack = function: 0x7ff930010518,
        packsize = function: 0x7ff9300104e8,
        rep = function: 0x7ff930010608,
        reverse = function: 0x7ff9300105d8,
        split = function: 0x7ff930010548,
        sub = function: 0x7ff9300105a8,
        unpack = function: 0x7ff9300104b8,
        upper = function: 0x7ff930010578,
      },
      table = {
        clear = function: 0x7ff930010ae8,
        clone = function: 0x7ff930010a58,
        concat = function: 0x7ff930010d58,
        create = function: 0x7ff930010b48,
        find = function: 0x7ff930010b18,
        foreach = function: 0x7ff930010d28,
        foreachi = function: 0x7ff930010cf8,
        freeze = function: 0x7ff930010ab8,
        getn = function: 0x7ff930010cc8,
        insert = function: 0x7ff930010c68,
        isfrozen = function: 0x7ff930010a88,
        maxn = function: 0x7ff930010c98,
        move = function: 0x7ff930010b78,
        pack = function: 0x7ff930010bd8,
        remove = function: 0x7ff930010c38,
        sort = function: 0x7ff930010c08,
        unpack = function: 0x7ff930010ba8,
      },
      toml = {
        parse = function: 0x7ff930032448,
        stringify = function: 0x7ff930032508,
      },
      tonumber = function: 0x7ff9300122e8,
      tostring = function: 0x7ff9300122b8,
      type = function: 0x7ff930012288,
      typeof = function: 0x7ff930012258,
      unpack = function: 0x7ff930010a28,
      utf8 = {
        char = function: 0x7ff930010338,
        charpattern = b"[\0-\x7f\xc2-\xf4][\x80-\xbf]*",
        codepoint = function: 0x7ff930010368,
        codes = function: 0x7ff9300102d8,
        len = function: 0x7ff930010308,
        offset = function: 0x7ff930010398,
      },
      vector = {
        abs = function: 0x7ff93000f798,
        angle = function: 0x7ff93000f828,
        ceil = function: 0x7ff93000f7c8,
        clamp = function: 0x7ff93000f738,
        create = function: 0x7ff93000f918,
        cross = function: 0x7ff93000f888,
        dot = function: 0x7ff93000f858,
        floor = function: 0x7ff93000f7f8,
        magnitude = function: 0x7ff93000f8e8,
        max = function: 0x7ff93000f708,
        min = function: 0x7ff93000f6d8,
        normalize = function: 0x7ff93000f8b8,
        one = vector(1, 1, 1),
        sign = function: 0x7ff93000f768,
        zero = vector(0, 0, 0),
      },
      xpcall = function: 0x7ff930012198,
      yaml = {
        parse = function: 0x7ff930032408,
        stringify = function: 0x7ff9300324c8,
      },
    },
    bit32 = table: 0x7ff930010218,
    buffer = table: 0x7ff93000fe88,
    coroutine = table: 0x7ff930010fc8,
    debug = table: 0x7ff93000eec8,
    math = table: 0x7ff93000f5b8,
    os = table: 0x7ff930010968,
    package = table: 0x7ff93000ee38,
    string = table: 0x7ff9300107e8,
    table = table: 0x7ff930010d88,
    utf8 = table: 0x7ff9300103c8,
    vector = table: 0x7ff93000f948,
  },
  loaders = {
    function: 0x7ff9300325c8,
    function: 0x7ff930032588,
  },
  path = "?.luau;?.lua",
}

[info]: Generating jest config[info]: Generating github-actions config

[error]: Error while generating jest config: Lua error: error converting Lua nil to table[error]: Error while generating github-actions config: Lua error: error converting Lua nil to table

[debug]: {
  cpath = "?.so",
  loaded = {
    _G = {
      _G = table: 0x55b3f4a630f8,
      _VERSION = "Luau 0.660",
      assert = function: 0x55b3f4a62fd8,
      bit32 = {
        arshift = function: 0x55b3f4a60c08,
        band = function: 0x55b3f4a60bd8,
        bnot = function: 0x55b3f4a60ba8,
        bor = function: 0x55b3f4a60b78,
        btest = function: 0x55b3f4a60b18,
        bxor = function: 0x55b3f4a60b48,
        byteswap = function: 0x55b3f4a60968,
        countlz = function: 0x55b3f4a609c8,
        countrz = function: 0x55b3f4a60998,
        extract = function: 0x55b3f4a60ae8,
        lrotate = function: 0x55b3f4a60ab8,
        lshift = function: 0x55b3f4a60a88,
        replace = function: 0x55b3f4a60a58,
        rrotate = function: 0x55b3f4a60a28,
        rshift = function: 0x55b3f4a609f8,
      },
      buffer = {
        copy = function: 0x55b3f4a60458,
        create = function: 0x55b3f4a60878,
        fill = function: 0x55b3f4a60428,
        fromstring = function: 0x55b3f4a60848,
        len = function: 0x55b3f4a60488,
        readf32 = function: 0x55b3f4a606c8,
        readf64 = function: 0x55b3f4a60698,
        readi16 = function: 0x55b3f4a60788,
        readi32 = function: 0x55b3f4a60728,
        readi8 = function: 0x55b3f4a607e8,
        readstring = function: 0x55b3f4a604e8,
        readu16 = function: 0x55b3f4a60758,
        readu32 = function: 0x55b3f4a606f8,
        readu8 = function: 0x55b3f4a607b8,
        tostring = function: 0x55b3f4a60818,
        writef32 = function: 0x55b3f4a60548,
        writef64 = function: 0x55b3f4a60518,
        writei16 = function: 0x55b3f4a60608,
        writei32 = function: 0x55b3f4a605a8,
        writei8 = function: 0x55b3f4a60668,
        writestring = function: 0x55b3f4a604b8,
        writeu16 = function: 0x55b3f4a605d8,
        writeu32 = function: 0x55b3f4a60578,
        writeu8 = function: 0x55b3f4a60638,
      },
      collectgarbage = function: 0x55b3f4a5f708,
      coroutine = {
        close = function: 0x55b3f4a61898,
        create = function: 0x55b3f4a619b8,
        isyieldable = function: 0x55b3f4a618c8,
        resume = function: 0x55b3f4a61868,
        running = function: 0x55b3f4a61988,
        status = function: 0x55b3f4a61958,
        wrap = function: 0x55b3f4a61928,
        yield = function: 0x55b3f4a618f8,
      },
      debug = {
        info = function: 0x55b3f4a5f8b8,
        traceback = function: 0x55b3f4a5f888,
      },
      error = function: 0x55b3f4a62fa8,
      gcinfo = function: 0x55b3f4a62f78,
      getfenv = function: 0x55b3f4a62f48,
      getmetatable = function: 0x55b3f4a62f18,
      ipairs = function: 0x55b3f4a83068,
      json = {
        parse = function: 0x55b3f4a82ea8,
        stringify = function: 0x55b3f4a82f68,
      },
      log = {},
      math = {
        abs = function: 0x55b3f4a5ffa8,
        acos = function: 0x55b3f4a5ff78,
        asin = function: 0x55b3f4a5ff48,
        atan = function: 0x55b3f4a5fee8,
        atan2 = function: 0x55b3f4a5ff18,
        ceil = function: 0x55b3f4a5feb8,
        clamp = function: 0x55b3f4a5fa38,
        cos = function: 0x55b3f4a5fe58,
        cosh = function: 0x55b3f4a5fe88,
        deg = function: 0x55b3f4a5fe28,
        exp = function: 0x55b3f4a5fdf8,
        floor = function: 0x55b3f4a5fdc8,
        fmod = function: 0x55b3f4a5fd98,
        frexp = function: 0x55b3f4a5fd68,
        huge = inf,
        ldexp = function: 0x55b3f4a5fd38,
        log = function: 0x55b3f4a5fcd8,
        log10 = function: 0x55b3f4a5fd08,
        map = function: 0x55b3f4a5f9a8,
        max = function: 0x55b3f4a5fca8,
        min = function: 0x55b3f4a5fc78,
        modf = function: 0x55b3f4a5fc48,
        noise = function: 0x55b3f4a5fa68,
        pi = 3.141592653589793,
        pow = function: 0x55b3f4a5fc18,
        rad = function: 0x55b3f4a5fbe8,
        random = function: 0x55b3f4a5fbb8,
        randomseed = function: 0x55b3f4a5fb88,
        round = function: 0x55b3f4a5f9d8,
        sign = function: 0x55b3f4a5fa08,
        sin = function: 0x55b3f4a5fb28,
        sinh = function: 0x55b3f4a5fb58,
        sqrt = function: 0x55b3f4a5faf8,
        tan = function: 0x55b3f4a5fa98,
        tanh = function: 0x55b3f4a5fac8,
      },
      newproxy = function: 0x55b3f4a62eb8,
      next = function: 0x55b3f4a62ee8,
      os = {
        clock = function: 0x55b3f4a61358,
        date = function: 0x55b3f4a61328,
        difftime = function: 0x55b3f4a612f8,
        time = function: 0x55b3f4a612c8,
      },
      package = table: 0x55b3f4a5f858,
      pairs = function: 0x55b3f4a83028,
      path = {
        cwd = function: 0x55b3f4a82de8,
        join = function: 0x55b3f4a82d68,
        resolve = function: 0x55b3f4a82da8,
      },
      pcall = function: 0x55b3f4a62be8,
      print = function: 0x55b3f4a62e88,
      rawequal = function: 0x55b3f4a62e58,
      rawget = function: 0x55b3f4a62e28,
      rawlen = function: 0x55b3f4a62dc8,
      rawset = function: 0x55b3f4a62df8,
      require = function: 0x55b3f4a5f738,
      select = function: 0x55b3f4a62d98,
      setfenv = function: 0x55b3f4a62d68,
      setmetatable = function: 0x55b3f4a62d38,
      string = {
        byte = function: 0x55b3f4a611d8,
        char = function: 0x55b3f4a611a8,
        find = function: 0x55b3f4a61178,
        format = function: 0x55b3f4a61148,
        gmatch = function: 0x55b3f4a61118,
        gsub = function: 0x55b3f4a610e8,
        len = function: 0x55b3f4a610b8,
        lower = function: 0x55b3f4a61088,
        match = function: 0x55b3f4a61058,
        pack = function: 0x55b3f4a60f38,
        packsize = function: 0x55b3f4a60f08,
        rep = function: 0x55b3f4a61028,
        reverse = function: 0x55b3f4a60ff8,
        split = function: 0x55b3f4a60f68,
        sub = function: 0x55b3f4a60fc8,
        unpack = function: 0x55b3f4a60ed8,
        upper = function: 0x55b3f4a60f98,
      },
      table = {
        clear = function: 0x55b3f4a61508,
        clone = function: 0x55b3f4a61478,
        concat = function: 0x55b3f4a61778,
        create = function: 0x55b3f4a61568,
        find = function: 0x55b3f4a61538,
        foreach = function: 0x55b3f4a61748,
        foreachi = function: 0x55b3f4a61718,
        freeze = function: 0x55b3f4a614d8,
        getn = function: 0x55b3f4a616e8,
        insert = function: 0x55b3f4a61688,
        isfrozen = function: 0x55b3f4a614a8,
        maxn = function: 0x55b3f4a616b8,
        move = function: 0x55b3f4a61598,
        pack = function: 0x55b3f4a615f8,
        remove = function: 0x55b3f4a61658,
        sort = function: 0x55b3f4a61628,
        unpack = function: 0x55b3f4a615c8,
      },
      toml = {
        parse = function: 0x55b3f4a82e68,
        stringify = function: 0x55b3f4a82f28,
      },
      tonumber = function: 0x55b3f4a62d08,
      tostring = function: 0x55b3f4a62cd8,
      type = function: 0x55b3f4a62ca8,
      typeof = function: 0x55b3f4a62c78,
      unpack = function: 0x55b3f4a61448,
      utf8 = {
        char = function: 0x55b3f4a60d58,
        charpattern = b"[\0-\x7f\xc2-\xf4][\x80-\xbf]*",
        codepoint = function: 0x55b3f4a60d88,
        codes = function: 0x55b3f4a60cf8,
        len = function: 0x55b3f4a60d28,
        offset = function: 0x55b3f4a60db8,
      },
      vector = {
        abs = function: 0x55b3f4a601b8,
        angle = function: 0x55b3f4a60248,
        ceil = function: 0x55b3f4a601e8,
        clamp = function: 0x55b3f4a60158,
        create = function: 0x55b3f4a60338,
        cross = function: 0x55b3f4a602a8,
        dot = function: 0x55b3f4a60278,
        floor = function: 0x55b3f4a60218,
        magnitude = function: 0x55b3f4a60308,
        max = function: 0x55b3f4a60128,
        min = function: 0x55b3f4a600f8,
        normalize = function: 0x55b3f4a602d8,
        one = vector(1, 1, 1),
        sign = function: 0x55b3f4a60188,
        zero = vector(0, 0, 0),
      },
      xpcall = function: 0x55b3f4a62bb8,
      yaml = {
        parse = function: 0x55b3f4a82e28,
        stringify = function: 0x55b3f4a82ee8,
      },
    },
    bit32 = table: 0x55b3f4a60c38,
    buffer = table: 0x55b3f4a608a8,
    coroutine = table: 0x55b3f4a619e8,
    debug = table: 0x55b3f4a5f8e8,
    math = table: 0x55b3f4a5ffd8,
    os = table: 0x55b3f4a61388,
    package = table: 0x55b3f4a5f858,
    string = table: 0x55b3f4a61208,
    table = table: 0x55b3f4a617a8,
    utf8 = table: 0x55b3f4a60de8,
    vector = table: 0x55b3f4a60368,
  },
  loaders = {
    function: 0x55b3f4a82fe8,
    function: 0x55b3f4a82fa8,
  },
  path = "?.luau;?.lua",
}
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:94:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:94:31"]:1: in ?
[debug]: {
  cpath = "?.so",
  loaded = {
    _G = {
      _G = table: 0x7f12c80127b8,
      _VERSION = "Luau 0.660",
      assert = function: 0x7f12c8012698,
      bit32 = {
        arshift = function: 0x7f12c80102c8,
        band = function: 0x7f12c8010298,
        bnot = function: 0x7f12c8010268,
        bor = function: 0x7f12c8010238,
        btest = function: 0x7f12c80101d8,
        bxor = function: 0x7f12c8010208,
        byteswap = function: 0x7f12c8010028,
        countlz = function: 0x7f12c8010088,
        countrz = function: 0x7f12c8010058,
        extract = function: 0x7f12c80101a8,
        lrotate = function: 0x7f12c8010178,
        lshift = function: 0x7f12c8010148,
        replace = function: 0x7f12c8010118,
        rrotate = function: 0x7f12c80100e8,
        rshift = function: 0x7f12c80100b8,
      },
      buffer = {
        copy = function: 0x7f12c800fb18,
        create = function: 0x7f12c800ff38,
        fill = function: 0x7f12c800fae8,
        fromstring = function: 0x7f12c800ff08,
        len = function: 0x7f12c800fb48,
        readf32 = function: 0x7f12c800fd88,
        readf64 = function: 0x7f12c800fd58,
        readi16 = function: 0x7f12c800fe48,
        readi32 = function: 0x7f12c800fde8,
        readi8 = function: 0x7f12c800fea8,
        readstring = function: 0x7f12c800fba8,
        readu16 = function: 0x7f12c800fe18,
        readu32 = function: 0x7f12c800fdb8,
        readu8 = function: 0x7f12c800fe78,
        tostring = function: 0x7f12c800fed8,
        writef32 = function: 0x7f12c800fc08,
        writef64 = function: 0x7f12c800fbd8,
        writei16 = function: 0x7f12c800fcc8,
        writei32 = function: 0x7f12c800fc68,
        writei8 = function: 0x7f12c800fd28,
        writestring = function: 0x7f12c800fb78,
        writeu16 = function: 0x7f12c800fc98,
        writeu32 = function: 0x7f12c800fc38,
        writeu8 = function: 0x7f12c800fcf8,
      },
      collectgarbage = function: 0x7f12c800edc8,
      coroutine = {
        close = function: 0x7f12c8010f58,
        create = function: 0x7f12c8011078,
        isyieldable = function: 0x7f12c8010f88,
        resume = function: 0x7f12c8010f28,
        running = function: 0x7f12c8011048,
        status = function: 0x7f12c8011018,
        wrap = function: 0x7f12c8010fe8,
        yield = function: 0x7f12c8010fb8,
      },
      debug = {
        info = function: 0x7f12c800ef78,
        traceback = function: 0x7f12c800ef48,
      },
      error = function: 0x7f12c8012668,
      gcinfo = function: 0x7f12c8012638,
      getfenv = function: 0x7f12c8012608,
      getmetatable = function: 0x7f12c80125d8,
      ipairs = function: 0x7f12c8032728,
      json = {
        parse = function: 0x7f12c8032568,
        stringify = function: 0x7f12c8032628,
      },
      log = {},
      math = {
        abs = function: 0x7f12c800f668,
        acos = function: 0x7f12c800f638,
        asin = function: 0x7f12c800f608,
        atan = function: 0x7f12c800f5a8,
        atan2 = function: 0x7f12c800f5d8,
        ceil = function: 0x7f12c800f578,
        clamp = function: 0x7f12c800f0f8,
        cos = function: 0x7f12c800f518,
        cosh = function: 0x7f12c800f548,
        deg = function: 0x7f12c800f4e8,
        exp = function: 0x7f12c800f4b8,
        floor = function: 0x7f12c800f488,
        fmod = function: 0x7f12c800f458,
        frexp = function: 0x7f12c800f428,
        huge = inf,
        ldexp = function: 0x7f12c800f3f8,
        log = function: 0x7f12c800f398,
        log10 = function: 0x7f12c800f3c8,
        map = function: 0x7f12c800f068,
        max = function: 0x7f12c800f368,
        min = function: 0x7f12c800f338,
        modf = function: 0x7f12c800f308,
        noise = function: 0x7f12c800f128,
        pi = 3.141592653589793,
        pow = function: 0x7f12c800f2d8,
        rad = function: 0x7f12c800f2a8,
        random = function: 0x7f12c800f278,
        randomseed = function: 0x7f12c800f248,
        round = function: 0x7f12c800f098,
        sign = function: 0x7f12c800f0c8,
        sin = function: 0x7f12c800f1e8,
        sinh = function: 0x7f12c800f218,
        sqrt = function: 0x7f12c800f1b8,
        tan = function: 0x7f12c800f158,
        tanh = function: 0x7f12c800f188,
      },
      newproxy = function: 0x7f12c8012578,
      next = function: 0x7f12c80125a8,
      os = {
        clock = function: 0x7f12c8010a18,
        date = function: 0x7f12c80109e8,
        difftime = function: 0x7f12c80109b8,
        time = function: 0x7f12c8010988,
      },
      package = table: 0x7f12c800ef18,
      pairs = function: 0x7f12c80326e8,
      path = {
        cwd = function: 0x7f12c80324a8,
        join = function: 0x7f12c8032428,
        resolve = function: 0x7f12c8032468,
      },
      pcall = function: 0x7f12c80122a8,
      print = function: 0x7f12c8012548,
      rawequal = function: 0x7f12c8012518,
      rawget = function: 0x7f12c80124e8,
      rawlen = function: 0x7f12c8012488,
      rawset = function: 0x7f12c80124b8,
      require = function: 0x7f12c800edf8,
      select = function: 0x7f12c8012458,
      setfenv = function: 0x7f12c8012428,
      setmetatable = function: 0x7f12c80123f8,
      string = {
        byte = function: 0x7f12c8010898,
        char = function: 0x7f12c8010868,
        find = function: 0x7f12c8010838,
        format = function: 0x7f12c8010808,
        gmatch = function: 0x7f12c80107d8,
        gsub = function: 0x7f12c80107a8,
        len = function: 0x7f12c8010778,
        lower = function: 0x7f12c8010748,
        match = function: 0x7f12c8010718,
        pack = function: 0x7f12c80105f8,
        packsize = function: 0x7f12c80105c8,
        rep = function: 0x7f12c80106e8,
        reverse = function: 0x7f12c80106b8,
        split = function: 0x7f12c8010628,
        sub = function: 0x7f12c8010688,
        unpack = function: 0x7f12c8010598,
        upper = function: 0x7f12c8010658,
      },
      table = {
        clear = function: 0x7f12c8010bc8,
        clone = function: 0x7f12c8010b38,
        concat = function: 0x7f12c8010e38,
        create = function: 0x7f12c8010c28,
        find = function: 0x7f12c8010bf8,
        foreach = function: 0x7f12c8010e08,
        foreachi = function: 0x7f12c8010dd8,
        freeze = function: 0x7f12c8010b98,
        getn = function: 0x7f12c8010da8,
        insert = function: 0x7f12c8010d48,
        isfrozen = function: 0x7f12c8010b68,
        maxn = function: 0x7f12c8010d78,
        move = function: 0x7f12c8010c58,
        pack = function: 0x7f12c8010cb8,
        remove = function: 0x7f12c8010d18,
        sort = function: 0x7f12c8010ce8,
        unpack = function: 0x7f12c8010c88,
      },
      toml = {
        parse = function: 0x7f12c8032528,
        stringify = function: 0x7f12c80325e8,
      },
      tonumber = function: 0x7f12c80123c8,
      tostring = function: 0x7f12c8012398,
      type = function: 0x7f12c8012368,
      typeof = function: 0x7f12c8012338,
      unpack = function: 0x7f12c8010b08,
      utf8 = {
        char = function: 0x7f12c8010418,
        charpattern = b"[\0-\x7f\xc2-\xf4][\x80-\xbf]*",
        codepoint = function: 0x7f12c8010448,
        codes = function: 0x7f12c80103b8,
        len = function: 0x7f12c80103e8,
        offset = function: 0x7f12c8010478,
      },
      vector = {
        abs = function: 0x7f12c800f878,
        angle = function: 0x7f12c800f908,
        ceil = function: 0x7f12c800f8a8,
        clamp = function: 0x7f12c800f818,
        create = function: 0x7f12c800f9f8,
        cross = function: 0x7f12c800f968,
        dot = function: 0x7f12c800f938,
        floor = function: 0x7f12c800f8d8,
        magnitude = function: 0x7f12c800f9c8,
        max = function: 0x7f12c800f7e8,
        min = function: 0x7f12c800f7b8,
        normalize = function: 0x7f12c800f998,
        one = vector(1, 1, 1),
        sign = function: 0x7f12c800f848,
        zero = vector(0, 0, 0),
      },
      xpcall = function: 0x7f12c8012278,
      yaml = {
        parse = function: 0x7f12c80324e8,
        stringify = function: 0x7f12c80325a8,
      },
    },
    bit32 = table: 0x7f12c80102f8,
    buffer = table: 0x7f12c800ff68,
    coroutine = table: 0x7f12c80110a8,
    debug = table: 0x7f12c800efa8,
    math = table: 0x7f12c800f698,
    os = table: 0x7f12c8010a48,
    package = table: 0x7f12c800ef18,
    string = table: 0x7f12c80108c8,
    table = table: 0x7f12c8010e68,
    utf8 = table: 0x7f12c80104a8,
    vector = table: 0x7f12c800fa28,
  },
  loaders = {
    function: 0x7f12c80326a8,
    function: 0x7f12c8032668,
  },
  path = "?.luau;?.lua",
}
[debug]: {
  cpath = "?.so",
  loaded = {
    _G = {
      _G = table: 0x7f12b80126d8,
      _VERSION = "Luau 0.660",
      assert = function: 0x7f12b80125b8,
      bit32 = {
        arshift = function: 0x7f12b80101e8,
        band = function: 0x7f12b80101b8,
        bnot = function: 0x7f12b8010188,
        bor = function: 0x7f12b8010158,
        btest = function: 0x7f12b80100f8,
        bxor = function: 0x7f12b8010128,
        byteswap = function: 0x7f12b800ff48,
        countlz = function: 0x7f12b800ffa8,
        countrz = function: 0x7f12b800ff78,
        extract = function: 0x7f12b80100c8,
        lrotate = function: 0x7f12b8010098,
        lshift = function: 0x7f12b8010068,
        replace = function: 0x7f12b8010038,
        rrotate = function: 0x7f12b8010008,
        rshift = function: 0x7f12b800ffd8,
      },
      buffer = {
        copy = function: 0x7f12b800fa38,
        create = function: 0x7f12b800fe58,
        fill = function: 0x7f12b800fa08,
        fromstring = function: 0x7f12b800fe28,
        len = function: 0x7f12b800fa68,
        readf32 = function: 0x7f12b800fca8,
        readf64 = function: 0x7f12b800fc78,
        readi16 = function: 0x7f12b800fd68,
        readi32 = function: 0x7f12b800fd08,
        readi8 = function: 0x7f12b800fdc8,
        readstring = function: 0x7f12b800fac8,
        readu16 = function: 0x7f12b800fd38,
        readu32 = function: 0x7f12b800fcd8,
        readu8 = function: 0x7f12b800fd98,
        tostring = function: 0x7f12b800fdf8,
        writef32 = function: 0x7f12b800fb28,
        writef64 = function: 0x7f12b800faf8,
        writei16 = function: 0x7f12b800fbe8,
        writei32 = function: 0x7f12b800fb88,
        writei8 = function: 0x7f12b800fc48,
        writestring = function: 0x7f12b800fa98,
        writeu16 = function: 0x7f12b800fbb8,
        writeu32 = function: 0x7f12b800fb58,
        writeu8 = function: 0x7f12b800fc18,
      },
      collectgarbage = function: 0x7f12b800ece8,
      coroutine = {
        close = function: 0x7f12b8010e78,
        create = function: 0x7f12b8010f98,
        isyieldable = function: 0x7f12b8010ea8,
        resume = function: 0x7f12b8010e48,
        running = function: 0x7f12b8010f68,
        status = function: 0x7f12b8010f38,
        wrap = function: 0x7f12b8010f08,
        yield = function: 0x7f12b8010ed8,
      },
      debug = {
        info = function: 0x7f12b800ee98,
        traceback = function: 0x7f12b800ee68,
      },
      error = function: 0x7f12b8012588,
      gcinfo = function: 0x7f12b8012558,
      getfenv = function: 0x7f12b8012528,
      getmetatable = function: 0x7f12b80124f8,
      ipairs = function: 0x7f12b8032648,
      json = {
        parse = function: 0x7f12b8032488,
        stringify = function: 0x7f12b8032548,
      },
      log = {},
      math = {
        abs = function: 0x7f12b800f588,
        acos = function: 0x7f12b800f558,
        asin = function: 0x7f12b800f528,
        atan = function: 0x7f12b800f4c8,
        atan2 = function: 0x7f12b800f4f8,
        ceil = function: 0x7f12b800f498,
        clamp = function: 0x7f12b800f018,
        cos = function: 0x7f12b800f438,
        cosh = function: 0x7f12b800f468,
        deg = function: 0x7f12b800f408,
        exp = function: 0x7f12b800f3d8,
        floor = function: 0x7f12b800f3a8,
        fmod = function: 0x7f12b800f378,
        frexp = function: 0x7f12b800f348,
        huge = inf,
        ldexp = function: 0x7f12b800f318,
        log = function: 0x7f12b800f2b8,
        log10 = function: 0x7f12b800f2e8,
        map = function: 0x7f12b800ef88,
        max = function: 0x7f12b800f288,
        min = function: 0x7f12b800f258,
        modf = function: 0x7f12b800f228,
        noise = function: 0x7f12b800f048,
        pi = 3.141592653589793,
        pow = function: 0x7f12b800f1f8,
        rad = function: 0x7f12b800f1c8,
        random = function: 0x7f12b800f198,
        randomseed = function: 0x7f12b800f168,
        round = function: 0x7f12b800efb8,
        sign = function: 0x7f12b800efe8,
        sin = function: 0x7f12b800f108,
        sinh = function: 0x7f12b800f138,
        sqrt = function: 0x7f12b800f0d8,
        tan = function: 0x7f12b800f078,
        tanh = function: 0x7f12b800f0a8,
      },
      newproxy = function: 0x7f12b8012498,
      next = function: 0x7f12b80124c8,
      os = {
        clock = function: 0x7f12b8010938,
        date = function: 0x7f12b8010908,
        difftime = function: 0x7f12b80108d8,
        time = function: 0x7f12b80108a8,
      },
      package = table: 0x7f12b800ee38,
      pairs = function: 0x7f12b8032608,
      path = {
        cwd = function: 0x7f12b80323c8,
        join = function: 0x7f12b8032348,
        resolve = function: 0x7f12b8032388,
      },
      pcall = function: 0x7f12b80121c8,
      print = function: 0x7f12b8012468,
      rawequal = function: 0x7f12b8012438,
      rawget = function: 0x7f12b8012408,
      rawlen = function: 0x7f12b80123a8,
      rawset = function: 0x7f12b80123d8,
      require = function: 0x7f12b800ed18,
      select = function: 0x7f12b8012378,
      setfenv = function: 0x7f12b8012348,
      setmetatable = function: 0x7f12b8012318,
      string = {
        byte = function: 0x7f12b80107b8,
        char = function: 0x7f12b8010788,
        find = function: 0x7f12b8010758,
        format = function: 0x7f12b8010728,
        gmatch = function: 0x7f12b80106f8,
        gsub = function: 0x7f12b80106c8,
        len = function: 0x7f12b8010698,
        lower = function: 0x7f12b8010668,
        match = function: 0x7f12b8010638,
        pack = function: 0x7f12b8010518,
        packsize = function: 0x7f12b80104e8,
        rep = function: 0x7f12b8010608,
        reverse = function: 0x7f12b80105d8,
        split = function: 0x7f12b8010548,
        sub = function: 0x7f12b80105a8,
        unpack = function: 0x7f12b80104b8,
        upper = function: 0x7f12b8010578,
      },
      table = {
        clear = function: 0x7f12b8010ae8,
        clone = function: 0x7f12b8010a58,
        concat = function: 0x7f12b8010d58,
        create = function: 0x7f12b8010b48,
        find = function: 0x7f12b8010b18,
        foreach = function: 0x7f12b8010d28,
        foreachi = function: 0x7f12b8010cf8,
        freeze = function: 0x7f12b8010ab8,
        getn = function: 0x7f12b8010cc8,
        insert = function: 0x7f12b8010c68,
        isfrozen = function: 0x7f12b8010a88,
        maxn = function: 0x7f12b8010c98,
        move = function: 0x7f12b8010b78,
        pack = function: 0x7f12b8010bd8,
        remove = function: 0x7f12b8010c38,
        sort = function: 0x7f12b8010c08,
        unpack = function: 0x7f12b8010ba8,
      },
      toml = {
        parse = function: 0x7f12b8032448,
        stringify = function: 0x7f12b8032508,
      },
      tonumber = function: 0x7f12b80122e8,
      tostring = function: 0x7f12b80122b8,
      type = function: 0x7f12b8012288,
      typeof = function: 0x7f12b8012258,
      unpack = function: 0x7f12b8010a28,
      utf8 = {
        char = function: 0x7f12b8010338,
        charpattern = b"[\0-\x7f\xc2-\xf4][\x80-\xbf]*",
        codepoint = function: 0x7f12b8010368,
        codes = function: 0x7f12b80102d8,
        len = function: 0x7f12b8010308,
        offset = function: 0x7f12b8010398,
      },
      vector = {
        abs = function: 0x7f12b800f798,
        angle = function: 0x7f12b800f828,
        ceil = function: 0x7f12b800f7c8,
        clamp = function: 0x7f12b800f738,
        create = function: 0x7f12b800f918,
        cross = function: 0x7f12b800f888,
        dot = function: 0x7f12b800f858,
        floor = function: 0x7f12b800f7f8,
        magnitude = function: 0x7f12b800f8e8,
        max = function: 0x7f12b800f708,
        min = function: 0x7f12b800f6d8,
        normalize = function: 0x7f12b800f8b8,
        one = vector(1, 1, 1),
        sign = function: 0x7f12b800f768,
        zero = vector(0, 0, 0),
      },
      xpcall = function: 0x7f12b8012198,
      yaml = {
        parse = function: 0x7f12b8032408,
        stringify = function: 0x7f12b80324c8,
      },
    },
    bit32 = table: 0x7f12b8010218,
    buffer = table: 0x7f12b800fe88,
    coroutine = table: 0x7f12b8010fc8,
    debug = table: 0x7f12b800eec8,
    math = table: 0x7f12b800f5b8,
    os = table: 0x7f12b8010968,
    package = table: 0x7f12b800ee38,
    string = table: 0x7f12b80107e8,
    table = table: 0x7f12b8010d88,
    utf8 = table: 0x7f12b80103c8,
    vector = table: 0x7f12b800f948,
  },
  loaders = {
    function: 0x7f12b80325c8,
    function: 0x7f12b8032588,
  },
  path = "?.luau;?.lua",
}
[info]: Generating github-actions config
[error]: Error while generating github-actions config: Lua error: error converting Lua nil to table
[info]: Generating jest config
[error]: Error while generating jest config: Lua error: error converting Lua nil to table
[debug]: {
  cpath = "?.so",
  loaded = {
    _G = {
      _G = table: 0x5611496ef0f8,
      _VERSION = "Luau 0.660",
      assert = function: 0x5611496eefd8,
      bit32 = {
        arshift = function: 0x5611496ecc08,
        band = function: 0x5611496ecbd8,
        bnot = function: 0x5611496ecba8,
        bor = function: 0x5611496ecb78,
        btest = function: 0x5611496ecb18,
        bxor = function: 0x5611496ecb48,
        byteswap = function: 0x5611496ec968,
        countlz = function: 0x5611496ec9c8,
        countrz = function: 0x5611496ec998,
        extract = function: 0x5611496ecae8,
        lrotate = function: 0x5611496ecab8,
        lshift = function: 0x5611496eca88,
        replace = function: 0x5611496eca58,
        rrotate = function: 0x5611496eca28,
        rshift = function: 0x5611496ec9f8,
      },
      buffer = {
        copy = function: 0x5611496ec458,
        create = function: 0x5611496ec878,
        fill = function: 0x5611496ec428,
        fromstring = function: 0x5611496ec848,
        len = function: 0x5611496ec488,
        readf32 = function: 0x5611496ec6c8,
        readf64 = function: 0x5611496ec698,
        readi16 = function: 0x5611496ec788,
        readi32 = function: 0x5611496ec728,
        readi8 = function: 0x5611496ec7e8,
        readstring = function: 0x5611496ec4e8,
        readu16 = function: 0x5611496ec758,
        readu32 = function: 0x5611496ec6f8,
        readu8 = function: 0x5611496ec7b8,
        tostring = function: 0x5611496ec818,
        writef32 = function: 0x5611496ec548,
        writef64 = function: 0x5611496ec518,
        writei16 = function: 0x5611496ec608,
        writei32 = function: 0x5611496ec5a8,
        writei8 = function: 0x5611496ec668,
        writestring = function: 0x5611496ec4b8,
        writeu16 = function: 0x5611496ec5d8,
        writeu32 = function: 0x5611496ec578,
        writeu8 = function: 0x5611496ec638,
      },
      collectgarbage = function: 0x5611496eb708,
      coroutine = {
        close = function: 0x5611496ed898,
        create = function: 0x5611496ed9b8,
        isyieldable = function: 0x5611496ed8c8,
        resume = function: 0x5611496ed868,
        running = function: 0x5611496ed988,
        status = function: 0x5611496ed958,
        wrap = function: 0x5611496ed928,
        yield = function: 0x5611496ed8f8,
      },
      debug = {
        info = function: 0x5611496eb8b8,
        traceback = function: 0x5611496eb888,
      },
      error = function: 0x5611496eefa8,
      gcinfo = function: 0x5611496eef78,
      getfenv = function: 0x5611496eef48,
      getmetatable = function: 0x5611496eef18,
      ipairs = function: 0x56114970f068,
      json = {
        parse = function: 0x56114970eea8,
        stringify = function: 0x56114970ef68,
      },
      log = {},
      math = {
        abs = function: 0x5611496ebfa8,
        acos = function: 0x5611496ebf78,
        asin = function: 0x5611496ebf48,
        atan = function: 0x5611496ebee8,
        atan2 = function: 0x5611496ebf18,
        ceil = function: 0x5611496ebeb8,
        clamp = function: 0x5611496eba38,
        cos = function: 0x5611496ebe58,
        cosh = function: 0x5611496ebe88,
        deg = function: 0x5611496ebe28,
        exp = function: 0x5611496ebdf8,
        floor = function: 0x5611496ebdc8,
        fmod = function: 0x5611496ebd98,
        frexp = function: 0x5611496ebd68,
        huge = inf,
        ldexp = function: 0x5611496ebd38,
        log = function: 0x5611496ebcd8,
        log10 = function: 0x5611496ebd08,
        map = function: 0x5611496eb9a8,
        max = function: 0x5611496ebca8,
        min = function: 0x5611496ebc78,
        modf = function: 0x5611496ebc48,
        noise = function: 0x5611496eba68,
        pi = 3.141592653589793,
        pow = function: 0x5611496ebc18,
        rad = function: 0x5611496ebbe8,
        random = function: 0x5611496ebbb8,
        randomseed = function: 0x5611496ebb88,
        round = function: 0x5611496eb9d8,
        sign = function: 0x5611496eba08,
        sin = function: 0x5611496ebb28,
        sinh = function: 0x5611496ebb58,
        sqrt = function: 0x5611496ebaf8,
        tan = function: 0x5611496eba98,
        tanh = function: 0x5611496ebac8,
      },
      newproxy = function: 0x5611496eeeb8,
      next = function: 0x5611496eeee8,
      os = {
        clock = function: 0x5611496ed358,
        date = function: 0x5611496ed328,
        difftime = function: 0x5611496ed2f8,
        time = function: 0x5611496ed2c8,
      },
      package = table: 0x5611496eb858,
      pairs = function: 0x56114970f028,
      path = {
        cwd = function: 0x56114970ede8,
        join = function: 0x56114970ed68,
        resolve = function: 0x56114970eda8,
      },
      pcall = function: 0x5611496eebe8,
      print = function: 0x5611496eee88,
      rawequal = function: 0x5611496eee58,
      rawget = function: 0x5611496eee28,
      rawlen = function: 0x5611496eedc8,
      rawset = function: 0x5611496eedf8,
      require = function: 0x5611496eb738,
      select = function: 0x5611496eed98,
      setfenv = function: 0x5611496eed68,
      setmetatable = function: 0x5611496eed38,
      string = {
        byte = function: 0x5611496ed1d8,
        char = function: 0x5611496ed1a8,
        find = function: 0x5611496ed178,
        format = function: 0x5611496ed148,
        gmatch = function: 0x5611496ed118,
        gsub = function: 0x5611496ed0e8,
        len = function: 0x5611496ed0b8,
        lower = function: 0x5611496ed088,
        match = function: 0x5611496ed058,
        pack = function: 0x5611496ecf38,
        packsize = function: 0x5611496ecf08,
        rep = function: 0x5611496ed028,
        reverse = function: 0x5611496ecff8,
        split = function: 0x5611496ecf68,
        sub = function: 0x5611496ecfc8,
        unpack = function: 0x5611496eced8,
        upper = function: 0x5611496ecf98,
      },
      table = {
        clear = function: 0x5611496ed508,
        clone = function: 0x5611496ed478,
        concat = function: 0x5611496ed778,
        create = function: 0x5611496ed568,
        find = function: 0x5611496ed538,
        foreach = function: 0x5611496ed748,
        foreachi = function: 0x5611496ed718,
        freeze = function: 0x5611496ed4d8,
        getn = function: 0x5611496ed6e8,
        insert = function: 0x5611496ed688,
        isfrozen = function: 0x5611496ed4a8,
        maxn = function: 0x5611496ed6b8,
        move = function: 0x5611496ed598,
        pack = function: 0x5611496ed5f8,
        remove = function: 0x5611496ed658,
        sort = function: 0x5611496ed628,
        unpack = function: 0x5611496ed5c8,
      },
      toml = {
        parse = function: 0x56114970ee68,
        stringify = function: 0x56114970ef28,
      },
      tonumber = function: 0x5611496eed08,
      tostring = function: 0x5611496eecd8,
      type = function: 0x5611496eeca8,
      typeof = function: 0x5611496eec78,
      unpack = function: 0x5611496ed448,
      utf8 = {
        char = function: 0x5611496ecd58,
        charpattern = b"[\0-\x7f\xc2-\xf4][\x80-\xbf]*",
        codepoint = function: 0x5611496ecd88,
        codes = function: 0x5611496eccf8,
        len = function: 0x5611496ecd28,
        offset = function: 0x5611496ecdb8,
      },
      vector = {
        abs = function: 0x5611496ec1b8,
        angle = function: 0x5611496ec248,
        ceil = function: 0x5611496ec1e8,
        clamp = function: 0x5611496ec158,
        create = function: 0x5611496ec338,
        cross = function: 0x5611496ec2a8,
        dot = function: 0x5611496ec278,
        floor = function: 0x5611496ec218,
        magnitude = function: 0x5611496ec308,
        max = function: 0x5611496ec128,
        min = function: 0x5611496ec0f8,
        normalize = function: 0x5611496ec2d8,
        one = vector(1, 1, 1),
        sign = function: 0x5611496ec188,
        zero = vector(0, 0, 0),
      },
      xpcall = function: 0x5611496eebb8,
      yaml = {
        parse = function: 0x56114970ee28,
        stringify = function: 0x56114970eee8,
      },
    },
    bit32 = table: 0x5611496ecc38,
    buffer = table: 0x5611496ec8a8,
    coroutine = table: 0x5611496ed9e8,
    debug = table: 0x5611496eb8e8,
    math = table: 0x5611496ebfd8,
    os = table: 0x5611496ed388,
    package = table: 0x5611496eb858,
    string = table: 0x5611496ed208,
    table = table: 0x5611496ed7a8,
    utf8 = table: 0x5611496ecde8,
    vector = table: 0x5611496ec368,
  },
  loaders = {
    function: 0x56114970efe8,
    function: 0x56114970efa8,
  },
  path = "?.luau;?.lua",
}
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:94:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:94:31"]:1: in ?
[debug]: {
  cpath = "?.so",
  loaded = {
    _G = {
      _G = table: 0x7f2f580127b8,
      _VERSION = "Luau 0.660",
      assert = function: 0x7f2f58012698,
      bit32 = {
        arshift = function: 0x7f2f580102c8,
        band = function: 0x7f2f58010298,
        bnot = function: 0x7f2f58010268,
        bor = function: 0x7f2f58010238,
        btest = function: 0x7f2f580101d8,
        bxor = function: 0x7f2f58010208,
        byteswap = function: 0x7f2f58010028,
        countlz = function: 0x7f2f58010088,
        countrz = function: 0x7f2f58010058,
        extract = function: 0x7f2f580101a8,
        lrotate = function: 0x7f2f58010178,
        lshift = function: 0x7f2f58010148,
        replace = function: 0x7f2f58010118,
        rrotate = function: 0x7f2f580100e8,
        rshift = function: 0x7f2f580100b8,
      },
      buffer = {
        copy = function: 0x7f2f5800fb18,
        create = function: 0x7f2f5800ff38,
        fill = function: 0x7f2f5800fae8,
        fromstring = function: 0x7f2f5800ff08,
        len = function: 0x7f2f5800fb48,
        readf32 = function: 0x7f2f5800fd88,
        readf64 = function: 0x7f2f5800fd58,
        readi16 = function: 0x7f2f5800fe48,
        readi32 = function: 0x7f2f5800fde8,
        readi8 = function: 0x7f2f5800fea8,
        readstring = function: 0x7f2f5800fba8,
        readu16 = function: 0x7f2f5800fe18,
        readu32 = function: 0x7f2f5800fdb8,
        readu8 = function: 0x7f2f5800fe78,
        tostring = function: 0x7f2f5800fed8,
        writef32 = function: 0x7f2f5800fc08,
        writef64 = function: 0x7f2f5800fbd8,
        writei16 = function: 0x7f2f5800fcc8,
        writei32 = function: 0x7f2f5800fc68,
        writei8 = function: 0x7f2f5800fd28,
        writestring = function: 0x7f2f5800fb78,
        writeu16 = function: 0x7f2f5800fc98,
        writeu32 = function: 0x7f2f5800fc38,
        writeu8 = function: 0x7f2f5800fcf8,
      },
      collectgarbage = function: 0x7f2f5800edc8,
      coroutine = {
        close = function: 0x7f2f58010f58,
        create = function: 0x7f2f58011078,
        isyieldable = function: 0x7f2f58010f88,
        resume = function: 0x7f2f58010f28,
        running = function: 0x7f2f58011048,
        status = function: 0x7f2f58011018,
        wrap = function: 0x7f2f58010fe8,
        yield = function: 0x7f2f58010fb8,
      },
      debug = {
        info = function: 0x7f2f5800ef78,
        traceback = function: 0x7f2f5800ef48,
      },
      error = function: 0x7f2f58012668,
      gcinfo = function: 0x7f2f58012638,
      getfenv = function: 0x7f2f58012608,
      getmetatable = function: 0x7f2f580125d8,
      ipairs = function: 0x7f2f58032728,
      json = {
        parse = function: 0x7f2f58032568,
        stringify = function: 0x7f2f58032628,
      },
      log = {},
      math = {
        abs = function: 0x7f2f5800f668,
        acos = function: 0x7f2f5800f638,
        asin = function: 0x7f2f5800f608,
        atan = function: 0x7f2f5800f5a8,
        atan2 = function: 0x7f2f5800f5d8,
        ceil = function: 0x7f2f5800f578,
        clamp = function: 0x7f2f5800f0f8,
        cos = function: 0x7f2f5800f518,
        cosh = function: 0x7f2f5800f548,
        deg = function: 0x7f2f5800f4e8,
        exp = function: 0x7f2f5800f4b8,
        floor = function: 0x7f2f5800f488,
        fmod = function: 0x7f2f5800f458,
        frexp = function: 0x7f2f5800f428,
        huge = inf,
        ldexp = function: 0x7f2f5800f3f8,
        log = function: 0x7f2f5800f398,
        log10 = function: 0x7f2f5800f3c8,
        map = function: 0x7f2f5800f068,
        max = function: 0x7f2f5800f368,
        min = function: 0x7f2f5800f338,
        modf = function: 0x7f2f5800f308,
        noise = function: 0x7f2f5800f128,
        pi = 3.141592653589793,
        pow = function: 0x7f2f5800f2d8,
        rad = function: 0x7f2f5800f2a8,
        random = function: 0x7f2f5800f278,
        randomseed = function: 0x7f2f5800f248,
        round = function: 0x7f2f5800f098,
        sign = function: 0x7f2f5800f0c8,
        sin = function: 0x7f2f5800f1e8,
        sinh = function: 0x7f2f5800f218,
        sqrt = function: 0x7f2f5800f1b8,
        tan = function: 0x7f2f5800f158,
        tanh = function: 0x7f2f5800f188,
      },
      newproxy = function: 0x7f2f58012578,
      next = function: 0x7f2f580125a8,
      os = {
        clock = function: 0x7f2f58010a18,
        date = function: 0x7f2f580109e8,
        difftime = function: 0x7f2f580109b8,
        time = function: 0x7f2f58010988,
      },
      package = table: 0x7f2f5800ef18,
      pairs = function: 0x7f2f580326e8,
      path = {
        cwd = function: 0x7f2f580324a8,
        join = function: 0x7f2f58032428,
        resolve = function: 0x7f2f58032468,
      },
      pcall = function: 0x7f2f580122a8,
      print = function: 0x7f2f58012548,
      rawequal = function: 0x7f2f58012518,
      rawget = function: 0x7f2f580124e8,
      rawlen = function: 0x7f2f58012488,
      rawset = function: 0x7f2f580124b8,
      require = function: 0x7f2f5800edf8,
      select = function: 0x7f2f58012458,
      setfenv = function: 0x7f2f58012428,
      setmetatable = function: 0x7f2f580123f8,
      string = {
        byte = function: 0x7f2f58010898,
        char = function: 0x7f2f58010868,
        find = function: 0x7f2f58010838,
        format = function: 0x7f2f58010808,
        gmatch = function: 0x7f2f580107d8,
        gsub = function: 0x7f2f580107a8,
        len = function: 0x7f2f58010778,
        lower = function: 0x7f2f58010748,
        match = function: 0x7f2f58010718,
        pack = function: 0x7f2f580105f8,
        packsize = function: 0x7f2f580105c8,
        rep = function: 0x7f2f580106e8,
        reverse = function: 0x7f2f580106b8,
        split = function: 0x7f2f58010628,
        sub = function: 0x7f2f58010688,
        unpack = function: 0x7f2f58010598,
        upper = function: 0x7f2f58010658,
      },
      table = {
        clear = function: 0x7f2f58010bc8,
        clone = function: 0x7f2f58010b38,
        concat = function: 0x7f2f58010e38,
        create = function: 0x7f2f58010c28,
        find = function: 0x7f2f58010bf8,
        foreach = function: 0x7f2f58010e08,
        foreachi = function: 0x7f2f58010dd8,
        freeze = function: 0x7f2f58010b98,
        getn = function: 0x7f2f58010da8,
        insert = function: 0x7f2f58010d48,
        isfrozen = function: 0x7f2f58010b68,
        maxn = function: 0x7f2f58010d78,
        move = function: 0x7f2f58010c58,
        pack = function: 0x7f2f58010cb8,
        remove = function: 0x7f2f58010d18,
        sort = function: 0x7f2f58010ce8,
        unpack = function: 0x7f2f58010c88,
      },
      toml = {
        parse = function: 0x7f2f58032528,
        stringify = function: 0x7f2f580325e8,
      },
      tonumber = function: 0x7f2f580123c8,
      tostring = function: 0x7f2f58012398,
      type = function: 0x7f2f58012368,
      typeof = function: 0x7f2f58012338,
      unpack = function: 0x7f2f58010b08,
      utf8 = {
        char = function: 0x7f2f58010418,
        charpattern = b"[\0-\x7f\xc2-\xf4][\x80-\xbf]*",
        codepoint = function: 0x7f2f58010448,
        codes = function: 0x7f2f580103b8,
        len = function: 0x7f2f580103e8,
        offset = function: 0x7f2f58010478,
      },
      vector = {
        abs = function: 0x7f2f5800f878,
        angle = function: 0x7f2f5800f908,
        ceil = function: 0x7f2f5800f8a8,
        clamp = function: 0x7f2f5800f818,
        create = function: 0x7f2f5800f9f8,
        cross = function: 0x7f2f5800f968,
        dot = function: 0x7f2f5800f938,
        floor = function: 0x7f2f5800f8d8,
        magnitude = function: 0x7f2f5800f9c8,
        max = function: 0x7f2f5800f7e8,
        min = function: 0x7f2f5800f7b8,
        normalize = function: 0x7f2f5800f998,
        one = vector(1, 1, 1),
        sign = function: 0x7f2f5800f848,
        zero = vector(0, 0, 0),
      },
      xpcall = function: 0x7f2f58012278,
      yaml = {
        parse = function: 0x7f2f580324e8,
        stringify = function: 0x7f2f580325a8,
      },
    },
    bit32 = table: 0x7f2f580102f8,
    buffer = table: 0x7f2f5800ff68,
    coroutine = table: 0x7f2f580110a8,
    debug = table: 0x7f2f5800efa8,
    math = table: 0x7f2f5800f698,
    os = table: 0x7f2f58010a48,
    package = table: 0x7f2f5800ef18,
    string = table: 0x7f2f580108c8,
    table = table: 0x7f2f58010e68,
    utf8 = table: 0x7f2f580104a8,
    vector = table: 0x7f2f5800fa28,
  },
  loaders = {
    function: 0x7f2f580326a8,
    function: 0x7f2f58032668,
  },
  path = "?.luau;?.lua",
}
[debug]: {
  cpath = "?.so",
  loaded = {
    _G = {
      _G = table: 0x7f2f500126d8,
      _VERSION = "Luau 0.660",
      assert = function: 0x7f2f500125b8,
      bit32 = {
        arshift = function: 0x7f2f500101e8,
        band = function: 0x7f2f500101b8,
        bnot = function: 0x7f2f50010188,
        bor = function: 0x7f2f50010158,
        btest = function: 0x7f2f500100f8,
        bxor = function: 0x7f2f50010128,
        byteswap = function: 0x7f2f5000ff48,
        countlz = function: 0x7f2f5000ffa8,
        countrz = function: 0x7f2f5000ff78,
        extract = function: 0x7f2f500100c8,
        lrotate = function: 0x7f2f50010098,
        lshift = function: 0x7f2f50010068,
        replace = function: 0x7f2f50010038,
        rrotate = function: 0x7f2f50010008,
        rshift = function: 0x7f2f5000ffd8,
      },
      buffer = {
        copy = function: 0x7f2f5000fa38,
        create = function: 0x7f2f5000fe58,
        fill = function: 0x7f2f5000fa08,
        fromstring = function: 0x7f2f5000fe28,
        len = function: 0x7f2f5000fa68,
        readf32 = function: 0x7f2f5000fca8,
        readf64 = function: 0x7f2f5000fc78,
        readi16 = function: 0x7f2f5000fd68,
        readi32 = function: 0x7f2f5000fd08,
        readi8 = function: 0x7f2f5000fdc8,
        readstring = function: 0x7f2f5000fac8,
        readu16 = function: 0x7f2f5000fd38,
        readu32 = function: 0x7f2f5000fcd8,
        readu8 = function: 0x7f2f5000fd98,
        tostring = function: 0x7f2f5000fdf8,
        writef32 = function: 0x7f2f5000fb28,
        writef64 = function: 0x7f2f5000faf8,
        writei16 = function: 0x7f2f5000fbe8,
        writei32 = function: 0x7f2f5000fb88,
        writei8 = function: 0x7f2f5000fc48,
        writestring = function: 0x7f2f5000fa98,
        writeu16 = function: 0x7f2f5000fbb8,
        writeu32 = function: 0x7f2f5000fb58,
        writeu8 = function: 0x7f2f5000fc18,
      },
      collectgarbage = function: 0x7f2f5000ece8,
      coroutine = {
        close = function: 0x7f2f50010e78,
        create = function: 0x7f2f50010f98,
        isyieldable = function: 0x7f2f50010ea8,
        resume = function: 0x7f2f50010e48,
        running = function: 0x7f2f50010f68,
        status = function: 0x7f2f50010f38,
        wrap = function: 0x7f2f50010f08,
        yield = function: 0x7f2f50010ed8,
      },
      debug = {
        info = function: 0x7f2f5000ee98,
        traceback = function: 0x7f2f5000ee68,
      },
      error = function: 0x7f2f50012588,
      gcinfo = function: 0x7f2f50012558,
      getfenv = function: 0x7f2f50012528,
      getmetatable = function: 0x7f2f500124f8,
      ipairs = function: 0x7f2f50032648,
      json = {
        parse = function: 0x7f2f50032488,
        stringify = function: 0x7f2f50032548,
      },
      log = {},
      math = {
        abs = function: 0x7f2f5000f588,
        acos = function: 0x7f2f5000f558,
        asin = function: 0x7f2f5000f528,
        atan = function: 0x7f2f5000f4c8,
        atan2 = function: 0x7f2f5000f4f8,
        ceil = function: 0x7f2f5000f498,
        clamp = function: 0x7f2f5000f018,
        cos = function: 0x7f2f5000f438,
        cosh = function: 0x7f2f5000f468,
        deg = function: 0x7f2f5000f408,
        exp = function: 0x7f2f5000f3d8,
        floor = function: 0x7f2f5000f3a8,
        fmod = function: 0x7f2f5000f378,
        frexp = function: 0x7f2f5000f348,
        huge = inf,
        ldexp = function: 0x7f2f5000f318,
        log = function: 0x7f2f5000f2b8,
        log10 = function: 0x7f2f5000f2e8,
        map = function: 0x7f2f5000ef88,
        max = function: 0x7f2f5000f288,
        min = function: 0x7f2f5000f258,
        modf = function: 0x7f2f5000f228,
        noise = function: 0x7f2f5000f048,
        pi = 3.141592653589793,
        pow = function: 0x7f2f5000f1f8,
        rad = function: 0x7f2f5000f1c8,
        random = function: 0x7f2f5000f198,
        randomseed = function: 0x7f2f5000f168,
        round = function: 0x7f2f5000efb8,
        sign = function: 0x7f2f5000efe8,
        sin = function: 0x7f2f5000f108,
        sinh = function: 0x7f2f5000f138,
        sqrt = function: 0x7f2f5000f0d8,
        tan = function: 0x7f2f5000f078,
        tanh = function: 0x7f2f5000f0a8,
      },
      newproxy = function: 0x7f2f50012498,
      next = function: 0x7f2f500124c8,
      os = {
        clock = function: 0x7f2f50010938,
        date = function: 0x7f2f50010908,
        difftime = function: 0x7f2f500108d8,
        time = function: 0x7f2f500108a8,
      },
      package = table: 0x7f2f5000ee38,
      pairs = function: 0x7f2f50032608,
      path = {
        cwd = function: 0x7f2f500323c8,
        join = function: 0x7f2f50032348,
        resolve = function: 0x7f2f50032388,
      },
      pcall = function: 0x7f2f500121c8,
      print = function: 0x7f2f50012468,
      rawequal = function: 0x7f2f50012438,
      rawget = function: 0x7f2f50012408,
      rawlen = function: 0x7f2f500123a8,
      rawset = function: 0x7f2f500123d8,
      require = function: 0x7f2f5000ed18,
      select = function: 0x7f2f50012378,
      setfenv = function: 0x7f2f50012348,
      setmetatable = function: 0x7f2f50012318,
      string = {
        byte = function: 0x7f2f500107b8,
        char = function: 0x7f2f50010788,
        find = function: 0x7f2f50010758,
        format = function: 0x7f2f50010728,
        gmatch = function: 0x7f2f500106f8,
        gsub = function: 0x7f2f500106c8,
        len = function: 0x7f2f50010698,
        lower = function: 0x7f2f50010668,
        match = function: 0x7f2f50010638,
        pack = function: 0x7f2f50010518,
        packsize = function: 0x7f2f500104e8,
        rep = function: 0x7f2f50010608,
        reverse = function: 0x7f2f500105d8,
        split = function: 0x7f2f50010548,
        sub = function: 0x7f2f500105a8,
        unpack = function: 0x7f2f500104b8,
        upper = function: 0x7f2f50010578,
      },
      table = {
        clear = function: 0x7f2f50010ae8,
        clone = function: 0x7f2f50010a58,
        concat = function: 0x7f2f50010d58,
        create = function: 0x7f2f50010b48,
        find = function: 0x7f2f50010b18,
        foreach = function: 0x7f2f50010d28,
        foreachi = function: 0x7f2f50010cf8,
        freeze = function: 0x7f2f50010ab8,
        getn = function: 0x7f2f50010cc8,
        insert = function: 0x7f2f50010c68,
        isfrozen = function: 0x7f2f50010a88,
        maxn = function: 0x7f2f50010c98,
        move = function: 0x7f2f50010b78,
        pack = function: 0x7f2f50010bd8,
        remove = function: 0x7f2f50010c38,
        sort = function: 0x7f2f50010c08,
        unpack = function: 0x7f2f50010ba8,
      },
      toml = {
        parse = function: 0x7f2f50032448,
        stringify = function: 0x7f2f50032508,
      },
      tonumber = function: 0x7f2f500122e8,
      tostring = function: 0x7f2f500122b8,
      type = function: 0x7f2f50012288,
      typeof = function: 0x7f2f50012258,
      unpack = function: 0x7f2f50010a28,
      utf8 = {
        char = function: 0x7f2f50010338,
        charpattern = b"[\0-\x7f\xc2-\xf4][\x80-\xbf]*",
        codepoint = function: 0x7f2f50010368,
        codes = function: 0x7f2f500102d8,
        len = function: 0x7f2f50010308,
        offset = function: 0x7f2f50010398,
      },
      vector = {
        abs = function: 0x7f2f5000f798,
        angle = function: 0x7f2f5000f828,
        ceil = function: 0x7f2f5000f7c8,
        clamp = function: 0x7f2f5000f738,
        create = function: 0x7f2f5000f918,
        cross = function: 0x7f2f5000f888,
        dot = function: 0x7f2f5000f858,
        floor = function: 0x7f2f5000f7f8,
        magnitude = function: 0x7f2f5000f8e8,
        max = function: 0x7f2f5000f708,
        min = function: 0x7f2f5000f6d8,
        normalize = function: 0x7f2f5000f8b8,
        one = vector(1, 1, 1),
        sign = function: 0x7f2f5000f768,
        zero = vector(0, 0, 0),
      },
      xpcall = function: 0x7f2f50012198,
      yaml = {
        parse = function: 0x7f2f50032408,
        stringify = function: 0x7f2f500324c8,
      },
    },
    bit32 = table: 0x7f2f50010218,
    buffer = table: 0x7f2f5000fe88,
    coroutine = table: 0x7f2f50010fc8,
    debug = table: 0x7f2f5000eec8,
    math = table: 0x7f2f5000f5b8,
    os = table: 0x7f2f50010968,
    package = table: 0x7f2f5000ee38,
    string = table: 0x7f2f500107e8,
    table = table: 0x7f2f50010d88,
    utf8 = table: 0x7f2f500103c8,
    vector = table: 0x7f2f5000f948,
  },
  loaders = {
    function: 0x7f2f500325c8,
    function: 0x7f2f50032588,
  },
  path = "?.luau;?.lua",
}
[info]: Generating jest config
[info]: Generating github-actions config[error]: Error while generating jest config: Lua error: error converting Lua nil to table

[error]: Error while generating github-actions config: Lua error: error converting Lua nil to table
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:94:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:94:31"]:1: in ?
[info]: Generating jest config
[info]: Generating github-actions config
[error]: Error while generating jest config: Lua error: error converting Lua nil to table
[error]: Error while generating github-actions config: Lua error: error converting Lua nil to table
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:94:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:94:31"]:1: in ?
[info]: Generating github-actions config
[info]: Generating jest config
[error]: Error while generating github-actions config: Lua error: error converting Lua nil to table
[error]: Error while generating jest config: Lua error: error converting Lua nil to table
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/find.rs:94:31"]:1: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in function 'require'
	[string "flint/src/util/plugin/find.rs:94:31"]:1: in ?
[info]: Generating github-actions config
[info]: Generating jest config
[error]: Error while generating github-actions config: Lua error: error converting Lua nil to table[error]: Error while generating jest config: Lua error: error converting Lua nil to table

[info]: Generating Jest configuration
[info]: Generating jest config
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[success]: Generated jest config successfully
[error]: Error loading lua file /home/skadewdl3/Projects/flint/flint-plugins/lint/sqlfluff: runtime error: [string "flint/src/util/plugin/helpers.rs:194:9"]:12: module 'log' not found
stack traceback:
	[C]: in ?
	[C]: in ?
	[string "flint/src/util/plugin/helpers.rs:194:9"]:12: in function 'require'
	[string "flint/src/util/plugin/find.rs:94:31"]:1: in ?
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
[info]: Generating Jest configuration
[info]: Generating jest config
[success]: Generated jest config successfully
[debug]: {
  "npm": [
    {
      "name": "jest",
      "version": "latest"
    }
  ]
}
[info]: Generating github-actions config
[success]: Generated github-actions config successfully
